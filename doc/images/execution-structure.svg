<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="800" height="600" viewBox="0 0 800 600">
  <defs>
    <!-- Gradient definitions -->
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#f8f9fa" />
      <stop offset="100%" stop-color="#e9ecef" />
    </linearGradient>
    
    <!-- Component gradients -->
    <linearGradient id="resourceGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#4361ee" />
      <stop offset="100%" stop-color="#3a0ca3" />
    </linearGradient>
    <linearGradient id="dependencyGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#7209b7" />
      <stop offset="100%" stop-color="#560bad" />
    </linearGradient>
    <linearGradient id="executionGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#f72585" />
      <stop offset="100%" stop-color="#b5179e" />
    </linearGradient>
    <linearGradient id="interfaceGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#4cc9f0" />
      <stop offset="100%" stop-color="#4895ef" />
    </linearGradient>
    <linearGradient id="environmentGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#ff9e00" />
      <stop offset="100%" stop-color="#ff7a00" />
    </linearGradient>
    <linearGradient id="graphGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#38b000" />
      <stop offset="100%" stop-color="#008000" />
    </linearGradient>
    
    <!-- Filter for shadow effect -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="3" dy="3" stdDeviation="5" flood-opacity="0.3" />
    </filter>
    
    <!-- Arrow marker for flow lines -->
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#6c757d" />
    </marker>
    
    <!-- Animation for data flow -->
    <g id="dataPacket">
      <rect width="10" height="10" rx="2" ry="2" fill="#fff" />
      <animate attributeName="opacity" values="1;0;1" dur="2s" repeatCount="indefinite" />
    </g>
  </defs>
  
  <!-- Background -->
  <rect width="100%" height="100%" fill="url(#bgGradient)" />
  
  <!-- Title -->
  <text x="400" y="50" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#212529" text-anchor="middle">
    Execution Structure For Digital Resources
  </text>
  
  <!-- Central execution framework -->
  <rect x="200" y="100" width="400" height="430" rx="15" ry="15" fill="#fff" fill-opacity="0.9" filter="url(#shadow)" />
  
  <!-- Components -->
  <g>
    <!-- Resource List Component -->
    <rect x="250" y="130" width="300" height="60" rx="10" ry="10" fill="url(#resourceGradient)" filter="url(#shadow)" />
    <text x="400" y="165" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Resource List</text>
    <text x="400" y="185" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Component Resources with DIDs</text>
    
    <!-- Dependency Graph Component -->
    <rect x="250" y="210" width="300" height="60" rx="10" ry="10" fill="url(#dependencyGradient)" filter="url(#shadow)" />
    <text x="400" y="245" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Dependency Graph</text>
    <text x="400" y="265" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Required, Optional, and Conditional Dependencies</text>
    
    <!-- Execution Sequence Component -->
    <rect x="250" y="290" width="300" height="60" rx="10" ry="10" fill="url(#executionGradient)" filter="url(#shadow)" />
    <text x="400" y="325" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Execution Sequence</text>
    <text x="400" y="345" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Linear, Parallel, and Conditional Execution Paths</text>
    
    <!-- Interface Definition Component -->
    <rect x="250" y="370" width="300" height="60" rx="10" ry="10" fill="url(#interfaceGradient)" filter="url(#shadow)" />
    <text x="400" y="405" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Interface Definition</text>
    <text x="400" y="425" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Input/Output Specs and Communication Protocols</text>
    
    <!-- Environment Requirements Component -->
    <rect x="250" y="450" width="300" height="60" rx="10" ry="10" fill="url(#environmentGradient)" filter="url(#shadow)" />
    <text x="400" y="485" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Environment Requirements</text>
    <text x="400" y="505" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Hardware, Software, and Network Requirements</text>
  </g>
  
  <!-- Example execution graph on the right -->
  <g transform="translate(650, 280)">
    <circle cx="0" cy="0" r="80" fill="url(#graphGradient)" filter="url(#shadow)" />
    <text x="0" y="-40" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white" text-anchor="middle">Graph Execution</text>
    <text x="0" y="-20" font-family="Arial, sans-serif" font-size="12" fill="white" text-anchor="middle">Example</text>
    
    <!-- Nodes in the graph -->
    <circle cx="-30" cy="-10" r="15" fill="#fff" stroke="#000" stroke-width="2" />
    <text x="-30" y="-5" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">A</text>
    
    <circle cx="30" cy="-10" r="15" fill="#fff" stroke="#000" stroke-width="2" />
    <text x="30" y="-5" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">B</text>
    
    <circle cx="-40" cy="30" r="15" fill="#fff" stroke="#000" stroke-width="2" />
    <text x="-40" y="35" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">C</text>
    
    <circle cx="0" cy="40" r="15" fill="#fff" stroke="#000" stroke-width="2" />
    <text x="0" y="45" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">D</text>
    
    <circle cx="40" cy="30" r="15" fill="#fff" stroke="#000" stroke-width="2" />
    <text x="40" y="35" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">E</text>
    
    <!-- Connections in the graph -->
    <line x1="-20" y1="-5" x2="15" y2="-5" stroke="#000" stroke-width="2" marker-end="url(#arrowhead)" />
    <line x1="-30" y1="5" x2="-40" y2="15" stroke="#000" stroke-width="2" marker-end="url(#arrowhead)" />
    <line x1="-25" y1="30" x2="-15" y2="35" stroke="#000" stroke-width="2" marker-end="url(#arrowhead)" />
    <line x1="30" y1="5" x2="40" y2="15" stroke="#000" stroke-width="2" marker-end="url(#arrowhead)" />
    <line x1="15" y1="35" x2="25" y2="30" stroke="#000" stroke-width="2" marker-end="url(#arrowhead)" />
    
    <!-- Animated data flow -->
    <g>
      <circle cx="0" cy="0" r="3" fill="#ff9e00">
        <animateMotion path="M -30 -10 L -40 30" dur="2s" repeatCount="indefinite" />
      </circle>
      <circle cx="0" cy="0" r="3" fill="#f72585">
        <animateMotion path="M 30 -10 L 40 30" dur="1.5s" repeatCount="indefinite" />
      </circle>
      <circle cx="0" cy="0" r="3" fill="#4cc9f0">
        <animateMotion path="M -40 30 L 0 40" dur="1.7s" repeatCount="indefinite" />
      </circle>
      <circle cx="0" cy="0" r="3" fill="#4361ee">
        <animateMotion path="M 40 30 L 0 40" dur="1.3s" repeatCount="indefinite" />
      </circle>
    </g>
  </g>
  
  <!-- Example resource icons on the left -->
  <g transform="translate(100, 200)">
    <!-- AI Model icon -->
    <rect x="0" y="0" width="60" height="60" rx="10" ry="10" fill="url(#resourceGradient)" filter="url(#shadow)" />
    <text x="30" y="40" font-family="Arial, sans-serif" font-size="30" fill="white" text-anchor="middle">üß†</text>
    <text x="30" y="75" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">AI Model</text>
    
    <!-- Dataset icon -->
    <rect x="0" y="100" width="60" height="60" rx="10" ry="10" fill="url(#dependencyGradient)" filter="url(#shadow)" />
    <text x="30" y="140" font-family="Arial, sans-serif" font-size="30" fill="white" text-anchor="middle">üìä</text>
    <text x="30" y="175" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">Dataset</text>
    
    <!-- Processor icon -->
    <rect x="0" y="200" width="60" height="60" rx="10" ry="10" fill="url(#executionGradient)" filter="url(#shadow)" />
    <text x="30" y="240" font-family="Arial, sans-serif" font-size="30" fill="white" text-anchor="middle">‚öôÔ∏è</text>
    <text x="30" y="275" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">Processor</text>
  </g>
  
  <!-- Connection lines from resources to execution framework -->
  <g stroke="#6c757d" stroke-width="2" stroke-dasharray="5,5">
    <path d="M 160 200 C 200 160, 200 160, 250 160" />
    <path d="M 160 300 C 200 240, 200 240, 250 240" />
    <path d="M 160 400 C 200 320, 200 320, 250 320" />
  </g>
  
  <!-- Connection line from framework to execution graph -->
  <g stroke="#6c757d" stroke-width="3">
    <path d="M 550 280 C 570 280, 570 280, 570 280" marker-end="url(#arrowhead)" />
  </g>
  
  <!-- Animated data packets moving along the execution path -->
  <g>
    <!-- From component resources to framework -->
    <rect width="8" height="8" rx="2" ry="2" fill="#4361ee">
      <animateMotion path="M 160 200 C 200 160, 200 160, 250 160" dur="2s" repeatCount="indefinite" />
    </rect>
    <rect width="8" height="8" rx="2" ry="2" fill="#7209b7">
      <animateMotion path="M 160 300 C 200 240, 200 240, 250 240" dur="3s" repeatCount="indefinite" />
    </rect>
    <rect width="8" height="8" rx="2" ry="2" fill="#f72585">
      <animateMotion path="M 160 400 C 200 320, 200 320, 250 320" dur="2.5s" repeatCount="indefinite" />
    </rect>
    
    <!-- Between framework components -->
    <rect width="8" height="8" rx="2" ry="2" fill="#fff">
      <animateMotion path="M 400 190 L 400 210" dur="0.5s" repeatCount="indefinite" />
    </rect>
    <rect width="8" height="8" rx="2" ry="2" fill="#fff">
      <animateMotion path="M 400 270 L 400 290" dur="0.5s" repeatCount="indefinite" />
    </rect>
    <rect width="8" height="8" rx="2" ry="2" fill="#fff">
      <animateMotion path="M 400 350 L 400 370" dur="0.5s" repeatCount="indefinite" />
    </rect>
    <rect width="8" height="8" rx="2" ry="2" fill="#fff">
      <animateMotion path="M 400 430 L 400 450" dur="0.5s" repeatCount="indefinite" />
    </rect>
    
    <!-- From framework to execution graph -->
    <rect width="8" height="8" rx="2" ry="2" fill="#38b000">
      <animateMotion path="M 550 280 C 570 280, 570 280, 570 280" dur="1s" repeatCount="indefinite" />
    </rect>
  </g>
  
  <!-- Cartoon character -->
  <g transform="translate(150, 500)">
    <circle cx="0" cy="0" r="30" fill="#f72585" />
    <circle cx="-10" cy="-5" r="5" fill="white" />
    <circle cx="10" cy="-5" r="5" fill="white" />
    <circle cx="-10" cy="-5" r="2" fill="black" />
    <circle cx="10" cy="-5" r="2" fill="black" />
    <path d="M -10 10 Q 0 20 10 10" stroke="white" stroke-width="2" fill="none" />
    
    <!-- Animated expression -->
    <path d="M -10 10 Q 0 15 10 10">
      <animate attributeName="d" values="M -10 10 Q 0 15 10 10; M -10 5 Q 0 15 10 5; M -10 10 Q 0 15 10 10" dur="4s" repeatCount="indefinite" />
    </path>
    
    <!-- Speech bubble -->
    <path d="M 30 -20 L 60 -40 L 40 -60 Z" fill="#fff" />
    <rect x="60" y="-90" width="180" height="50" rx="10" ry="10" fill="#fff" />
    <text x="150" y="-60" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">Complex resources are executed</text>
    <text x="150" y="-45" font-family="Arial, sans-serif" font-size="12" fill="#212529" text-anchor="middle">according to this structure!</text>
  </g>
</svg>